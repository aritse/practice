TERMS:
pop() - removes the top
push(item) - adds an item to the top of the stack
peek() - returns the top element of the stack
isEmpty() - returns true if the stack is empty

CONSIDERATIONS:
A stack can be implemented using a linked list.
Unlike an array, a stack doesn't offer constant-time access to the ith item.
It does allow constant time to add and remove because it doesn't require shifting elements.
In certain types of problems, it can be favorable to store data in a stack rather than in an array.
Stacks are useful in certain recursive algorithms such as backtracking. We push a temp element onto
    a stack as you recurse, but then remove it as you backtrack because the recursive check failed.
Stacks are also used to implement a recursive algorithm iteratively.

QUESTIONS:
