/*
You are tasked with implementing a method that returns the lowest possible number that could be generated after removing n characters from a string of digits. The method signature should look like:

public static string GenerateLowestNumber(string number, int n)

Where the number parameter is a string that contains a number (e.g. “4205123”), and the n parameter represents the number of characters to remove from the string. The goal of this method is to return the lowest number that can be generated by removing n characters from the number provided while keeping the positions of the remaining characters relative to each other the same (i.e. the method should remove n characters from the string, but it cannot re-order the characters).

For example, if number is “4205123” and n is 4, the lowest possible number that can be generated after removing any 4 characters is “012”. If number is “216504” and n is 3, the lowest possible number that can be generated after removing 3 characters is “104”.
*/

class T
{
    public static string GenerateLowestNumber(string number, int n)
    {
        StringBuilder s = new StringBuilder(number);
        int last = s.Length - 1;
        int i = 0;
        while (n > 0)
        {
            if (i < last)
            {
                if (s[i] > s[i + 1])
                {
                    s[i] = 'X';
                    n--;
                }
                i++;
            }
            else
            {
                s[last--] = 'X';
                n--;
            }
        }
        number = s.ToString();
        return number.Replace("X", "");
    }
}

public class Program
{
    public static void Main()
    {
        Console.WriteLine(T.GenerateLowestNumber("4205123", 4)); // Prints "012"
        Console.WriteLine(T.GenerateLowestNumber("216504", 3)); // Prints "104"
    }
}